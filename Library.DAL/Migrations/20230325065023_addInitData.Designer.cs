// <auto-generated />
using System;
using Library.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.DAL.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20230325065023_addInitData")]
    partial class addInitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReceiptTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Amor Towles",
                            Description = "This is a historical fiction novel that follows four young men on a cross-country road trip in 1950s America. Along the way, they encounter adventure, danger, and unexpected connections.",
                            Genre = "historical fiction",
                            Isbn = "978-0-7352-1128-5",
                            Name = "The Lincoln Highway"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Frank Herbert",
                            Description = "This is a science fiction classic that tells the story of Paul Atreides, a young man who inherits a desert planet called Arrakis, which holds a valuable spice that can extend life and enhance consciousness. Paul must fight against enemies who want to take over his planet and his destiny.",
                            Genre = "science fiction",
                            Isbn = "978-0-4417-8644-5",
                            Name = "Dune"
                        },
                        new
                        {
                            Id = 3,
                            Author = "James Clear",
                            Description = "This is a self-help book that teaches readers how to create and maintain effective habits that can improve their lives. The book draws on scientific research, personal stories, and practical advice.",
                            Genre = "self-help",
                            Isbn = "978-0-7352-1049-3",
                            Name = "Atomic Habits: An Easy & Proven Way to Build Good Habits & Break Bad Ones"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(97)
                        .HasColumnType("nvarchar(97)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nickname = "user",
                            Password = "E24FECBB80B33722CDFF42A63635555F2E1EAB5AC9F7FB28BA07F61A3D29DF27:D0AB4E3D13A15CE460D6D7AD14E7DBAD"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
